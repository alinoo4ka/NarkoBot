import asyncio
import random
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from datetime import datetime

API_TOKEN = '7632478806:AAElMiV06yQtnPHKgjbF_UPM0JuQiKcOlSE'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

discovered_planets = 0
space_artifacts = []
planet_names = []
user_nicknames = {}
start_time = None
level_prices = [10, 30, 90, 270] # –¶–µ–Ω—ã –Ω–∞ –ø–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è
last_message = None # –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è

@dp.message_handler(commands=['start'])
async def start_message(message: types.Message):
  global start_time
  start_time = datetime.now()
  await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ª—é–±–∏—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –∫–æ—Å–º–æ—Å. üöÄ\n\n"
            "–ù–∞—á–Ω–µ–º —Å —Å–æ–∑–¥–∞–Ω–∏—è –≤–∞—à–µ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /–≥–Ω–∏–∫ [–Ω–∏–∫–Ω–µ–π–º]")

@dp.message_handler(commands=['–∫–æ—Å–º–æ—Å'])
async def show_discoveries(message: types.Message):
  global last_message
  last_message = message # –û–±–Ω–æ–≤–ª—è–µ–º last_message 
  nickname = user_nicknames.get(message.from_user.id)
  response = f"{nickname}, –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n" if nickname else "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n"
  response += f"–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –ø–ª–∞–Ω–µ—Ç: {discovered_planets}\n"
  response += f"–í—Å–µ–≥–æ —Ä–∞–∑ –∏—Å–∫–∞–ª–∏ –ø–ª–∞–Ω–µ—Ç: {len(planet_names)}\n"
  response += f"–ù–∞–π–¥–µ–Ω–æ –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö –∫–æ—Ä–∞–±–ª–µ–π: {space_artifacts.count('–∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å –¥—Ä–µ–≤–Ω–µ–π —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–∏')}\n"
  response += f"–ù–∞–π–¥–µ–Ω–æ –æ—Å–∫–æ–ª–∫–æ–≤ –∞—Å—Ç–µ—Ä–æ–∏–¥–∞: {space_artifacts.count('–æ—Å–∫–æ–ª–æ–∫ –∞—Å—Ç–µ—Ä–æ–∏–¥–∞ —Å —Ä–µ–¥–∫–∏–º–∏ –º–∏–Ω–µ—Ä–∞–ª–∞–º–∏')}\n"
  response += f"–í–∞—à –∏–≥—Ä–æ–≤–æ–π —É—Ä–æ–≤–µ–Ω—å: {calculate_level(discovered_planets)}\n"
  response += f"–ò–≥—Ä–∞–µ—Ç–µ –≤ –±–æ—Ç–∞ —Å {start_time.strftime('%d.%m.%Y %H:%M')}"
  await message.answer(response)

@dp.message_handler(commands=['–≥–Ω–∏–∫'])
async def set_nickname(message: types.Message):
  global user_nicknames, last_message
  last_message = message # –û–±–Ω–æ–≤–ª—è–µ–º last_message
  args = message.text.split()
  if len(args) != 2:
    await message.answer("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /–≥–Ω–∏–∫ [–Ω–∏–∫–Ω–µ–π–º]")
    return
  new_nickname = args[1]
  if new_nickname in user_nicknames.values():
    await message.answer("–≠—Ç–æ—Ç –Ω–∏–∫–Ω–µ–π–º —É–∂–µ –∑–∞–Ω—è—Ç! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π.")
    return
  user_nicknames[message.from_user.id] = new_nickname
  await message.answer(f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª–∏ —Å–µ–±–µ –Ω–∏–∫–Ω–µ–π–º \"{new_nickname}\"")

@dp.message_handler(commands=['—É—Ä–æ–≤–µ–Ω—å'])
async def show_level(message: types.Message):
  global last_message
  last_message = message # –û–±–Ω–æ–≤–ª—è–µ–º last_message
    nickname = user_nicknames.get(message.from_user.id)
    current_level = calculate_level(discovered_planets)
    required_planets = level_prices[current_level - 1] if current_level < 5 else 0
    response = f"{nickname}, –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: {current_level}\n" if nickname else f"–í–∞—à —É—Ä–æ–≤–µ–Ω—å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: {current_level}\n"
    response += f"–ß—Ç–æ–±—ã –ø—Ä–æ–∫–∞—á–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n"
    response += f"–ü–ª–∞–Ω–µ—Ç—ã {discovered_planets}/{required_planets}"
    if current_level < 5:
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("–ü–æ–≤—ã—Å–∏—Ç—å", callback_data="upgrade_level"))
        await message.answer(response, reply_markup=keyboard)
    else:
        await message.answer(response)

@dp.callback_query_handler(lambda c: c.data == 'upgrade_level')
async def process_callback_upgrade_level(call: types.CallbackQuery):
    global discovered_planets
    user_id = call.from_user.id
    current_level = calculate_level(discovered_planets)
    required_planets = level_prices[current_level - 1] if current_level < 5 else 0
    if discovered_planets >= required_planets:
        await call.message.edit_text("–í–∞—à —É—Ä–æ–≤–µ–Ω—å —É—Å–ø–µ—à–Ω–æ –ø–æ–≤—ã—à–µ–Ω!")
        discovered_planets -= required_planets
    else:
        await call.message.edit_text("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–ª–∞–Ω–µ—Ç!")

@dp.message_handler(regexp=r"^–ø–ª–∞–Ω–µ—Ç–∞ (.+)$")
async def describe_planet(message: types.Message):
    global last_message
    last_message = message # –û–±–Ω–æ–≤–ª—è–µ–º last_message
    planet_name = message.text.split()[1]
    planet_descriptions = {
        "–ê–ª—å—Ç–∞-42": "–ü–ª–∞–Ω–µ—Ç–∞ –ê–ª—å—Ç–∞-42, –ø–æ–∫—Ä—ã—Ç–∞—è –ª–µ—Å–∞–º–∏ –∏ –æ–∑–µ—Ä–∞–º–∏, —Å–ª–∞–≤–∏—Ç—Å—è —Å–≤–æ–µ–π –±–æ–≥–∞—Ç–æ–π —Ñ–ª–æ—Ä–æ–π –∏ —Ñ–∞—É–Ω–æ–π.",
        "–ë–µ—Ç–∞-77": "–ë–µ—Ç–∞-77 - —ç—Ç–æ –≥–∞–∑–æ–≤—ã–π –≥–∏–≥–∞–Ω—Ç, –≤—Ä–∞—â–∞—é—â–∏–π—Å—è –≤–æ–∫—Ä—É–≥ –¥–≤–æ–π–Ω–æ–π –∑–≤–µ–∑–¥—ã.  –ï–≥–æ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –º–µ—Ç–∞–Ω–∞ –∏ –∞–º–º–∏–∞–∫–∞.",
        "–ì–∞–º–º–∞-13": "–ì–∞–º–º–∞-13 - —ç—Ç–æ —Å–∫–∞–ª–∏—Å—Ç–∞—è –ø–ª–∞–Ω–µ—Ç–∞ —Å –≤—É–ª–∫–∞–Ω–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é,  –æ–∫—Ä—É–∂–µ–Ω–Ω–∞—è –∫–æ–ª—å—Ü–∞–º–∏ –∏–∑ –ø—ã–ª–∏ –∏ –≥–∞–∑–∞.",
        "–î–µ–ª—å—Ç–∞-99": "–î–µ–ª—å—Ç–∞-99 - —ç—Ç–æ –Ω–µ–±–æ–ª—å—à–∞—è –ø–ª–∞–Ω–µ—Ç–∞ —Å –æ—á–µ–Ω—å –Ω–∏–∑–∫–æ–π –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–µ–π,  –ø–æ–∫—Ä—ã—Ç–∞—è –∑–∞—Å—Ç—ã–≤—à–µ–π –ª–∞–≤–æ–π.",
        "–≠–ø—Å–∏–ª–æ–Ω-20": "–≠–ø—Å–∏–ª–æ–Ω-20 - —ç—Ç–æ –ø–ª–∞–Ω–µ—Ç–∞,  —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ —á–∏—Å—Ç–æ–≥–æ –ª—å–¥–∞.  –û–Ω–∞ –≤—Ä–∞—â–∞–µ—Ç—Å—è –≤–æ–∫—Ä—É–≥ –∫—Ä–∞—Å–Ω–æ–≥–æ –∫–∞—Ä–ª–∏–∫–∞.",
        "–ó–∏-42": "–ó–∏-42 - —ç—Ç–æ –ø–ª–∞–Ω–µ—Ç–∞,  –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–ª–µ–¥—ã –¥—Ä–µ–≤–Ω–µ–π —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–∏.",
        "–≠—Ç–∞-77": "–≠—Ç–∞-77 - —ç—Ç–æ –≥–∞–∑–æ–≤—ã–π –≥–∏–≥–∞–Ω—Ç,  –∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–≤–æ–∏–º–∏ –æ–≥—Ä–æ–º–Ω—ã–º–∏ —à—Ç–æ—Ä–º–∞–º–∏.",
        "–¢–µ—Ç–∞-13": "–¢–µ—Ç–∞-13 - —ç—Ç–æ –ø–ª–∞–Ω–µ—Ç–∞,  –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –∫–æ—Ç–æ—Ä–æ–π –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –≤–æ–¥–∞ –≤ –∂–∏–¥–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.",
        "–ô–æ—Ç–∞-99": "–ô–æ—Ç–∞-99 - —ç—Ç–æ –ø–ª–∞–Ω–µ—Ç–∞,  –ø–æ–∫—Ä—ã—Ç–∞—è –∫—Ä–∞—Ç–µ—Ä–∞–º–∏ –æ—Ç –º–µ—Ç–µ–æ—Ä–∏—Ç–æ–≤."
    }
    description = planet_descriptions.get(planet_name)
    if description:
        await message.answer(description)
    else:
        await message.answer("–ü–ª–∞–Ω–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! üïµÔ∏è‚Äç‚ôÄÔ∏è")

async def find_planet_task():
    global discovered_planets
    global space_artifacts
    global planet_names
    global last_message # –î–æ–±–∞–≤–∏–ª–∏ last_message –≤ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ 
    while True:
        messages = [
            "–û—Ç–ª–∏—á–Ω–æ! –í—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –Ω–æ–≤—É—é –ø–ª–∞–Ω–µ—Ç—É –≤ –≥–∞–ª–∞–∫—Ç–∏–∫–µ –ê–Ω–¥—Ä–æ–º–µ–¥—ã! üéâ\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}",
            "–ê–•–£–ï–¢–¨! –í–æ –≤—Ä–µ–º—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ—Å–º–æ—Å–∞ –≤—ã –Ω–∞—Ç–∫–Ω—É–ª–∏—Å—å –Ω–∞ —Ç—Ä–∏ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–∞!\n+1 –Ω–æ–≤–∞—è –ø–ª–∞–Ω–µ—Ç–∞\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}\n+–∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å –¥—Ä–µ–≤–Ω–µ–π —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–∏\n+–æ—Å–∫–æ–ª–æ–∫ –∞—Å—Ç–µ—Ä–æ–∏–¥–∞ —Å —Ä–µ–¥–∫–∏–º–∏ –º–∏–Ω–µ—Ä–∞–ª–∞–º–∏",
            "–£–¥–∞—á–∞ —É–ª—ã–±–Ω—É–ª–∞—Å—å –≤–∞–º! –í—ã –Ω–∞—à–ª–∏ –ø–ª–∞–Ω–µ—Ç—É, –ø–æ—Ö–æ–∂—É—é –Ω–∞ –ó–µ–º–ª—é, –≤ —Å–æ–∑–≤–µ–∑–¥–∏–∏ –û—Ä–∏–æ–Ω–∞! üåé\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}",
            "–û–≥–æ! –í—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –ø–ª–∞–Ω–µ—Ç—É, –≤—Ä–∞—â–∞—é—â—É—é—Å—è –≤–æ–∫—Ä—É–≥ –¥–≤–æ–π–Ω–æ–π –∑–≤–µ–∑–¥—ã! ü™ê\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}",
            "–í–∞—à–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø—Ä–∏–Ω–µ—Å–ª–∏ –ø–ª–æ–¥—ã! –í—ã –Ω–∞—à–ª–∏ –Ω–æ–≤—É—é –ø–ª–∞–Ω–µ—Ç—É —Å –∫–æ–ª—å—Ü–∞–º–∏, –∫–∞–∫ —É –°–∞—Ç—É—Ä–Ω–∞! ü™ê\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}"
        ]
        found_message = random.choice(messages).format(planet_name=generate_planet_name())
        await last_message.answer(found_message) # –ò—Å–ø–æ–ª—å–∑—É–µ–º last_message –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        update_discoveries(found_message)
        await asyncio.sleep(1800) # 30 –º–∏–Ω—É—Ç

def update_discoveries(found_message):
    global discovered_planets
    global space_artifacts
    global planet_names
    if "–Ω–æ–≤—É—é –ø–ª–∞–Ω–µ—Ç—É" in found_message:
        discovered_planets += 1
        planet_names.append(generate_planet_name())
    if "–∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å" in found_message:
        space_artifacts.append("–∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å –¥—Ä–µ–≤–Ω–µ–π —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–∏")
    if "–æ—Å–∫–æ–ª–æ–∫ –∞—Å—Ç–µ—Ä–æ–∏–¥–∞" in found_message:
        space_artifacts.append("–æ—Å–∫–æ–ª–æ–∫ –∞—Å—Ç–µ—Ä–æ–∏–¥–∞ —Å —Ä–µ–¥–∫–∏–º–∏ –º–∏–Ω–µ—Ä–∞–ª–∞–º–∏")

def generate_planet_name():
    prefixes = ["–ê–ª—å—Ç–∞", "–ë–µ—Ç–∞", "–ì–∞–º–º–∞", "–î–µ–ª—å—Ç–∞", "–≠–ø—Å–∏–ª–æ–Ω", "–ó–∏", "–≠—Ç–∞", "–¢–µ—Ç–∞", "–ô–æ—Ç–∞", "–ö–∞–ø–ø–∞"]
    suffixes = ["-42", "-77", "-13", "-99", "-20"]
    return random.choice(prefixes) + random.choice(suffixes)

def calculate_level(planets_discovered):
    if planets_discovered < 5:
        return 1
    elif planets_discovered < 10:
        return 2
    elif planets_discovered < 20:
        return 3
    else:
        return 4


async def main():
    asyncio.create_task(find_planet_task()) # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –ø–æ–∏—Å–∫–∞ –ø–ª–∞–Ω–µ—Ç
    await dp.start_polling()

if __name__ == '__main__':
    asyncio.run(main())
