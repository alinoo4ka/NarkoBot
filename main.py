import asyncio
import random
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

API_TOKEN = '7632478806:AAElMiV06yQtnPHKgjbF_UPM0JuQiKcOlSE'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

mephedrone_total = 0
other_items = []

@dp.message_handler(commands=['start'])
async def start_message(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ª—é–±–∏—Ç –∏—Å–∫–∞—Ç—å –∑–∞–∫–ª–∞–¥–∫–∏. üòâ")

@dp.message_handler(commands=['–∑–∞–∫–ª–∞–¥–∫–∞'])
async def show_stash(message: types.Message):
    response = "–í –≤–∞—à–µ–π –∑–∞–∫–ª–∞–¥–∫–µ:\n"
    response += f"{mephedrone_total}–≥ –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞\n"

    if other_items:
        for item in other_items:
            response += f"{item}\n"

    await message.answer(response)

@dp.message_handler(regexp=r"^–ò—Å–∫–∞—Ç—å –∑–∞–∫–ª–∞–¥–∫—É$")
async def find_stash(message: types.Message):
    global mephedrone_total
    global other_items

    messages = [
        "–û—Ç–ª–∏—á–Ω–æ! —Ç—ã –Ω–∞—à–µ–ª –ø–æ–¥ –∫—É—Å—Ç–æ–º 5–≥ –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞",
        "–ê–•–£–ï–¢–¨, –≤ —Ç—ë–º–Ω–æ–º –ø–µ—Ä–µ—É–ª–∫–µ –ª–µ–∂–∞–ª–∏ 3 —Ä–∞–∑–Ω—ã–µ –∑–∞–∫–ª–∞–¥–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É—Å–ø–µ–ª–∏ —Å–ø—Ä—è—Ç–∞—Ç—å\n+6–≥ –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞\n+2–≥ –∫–æ–∫–∞–∏–Ω–∞\n+–ø–∞–∫–µ—Ç–∏–∫ —Å–Ω—é—Å–∞",
        "–£–¥–∞—á–∞ —É–ª—ã–±–Ω—É–ª–∞—Å—å —Ç–µ–±–µ! –í –∑–∞–±—Ä–æ—à–µ–Ω–Ω–æ–º –∑–¥–∞–Ω–∏–∏ —Ç—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª —Ç–∞–π–Ω–∏–∫ —Å 8–≥ –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞",
        "–û–≥–æ! –í –º—É—Å–æ—Ä–Ω–æ–º –±–∞–∫–µ –ª–µ–∂–∞–ª–∏ 3–≥ –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞, –∑–∞–≤–µ—Ä–Ω—É—Ç—ã–µ –≤ —Ñ–æ–ª—å–≥—É",
        "–ù–∞—à–µ–ª –∑–∞–∫–ª–∞–¥–∫—É! –í –Ω–µ–π 4–≥ –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞ –∏ –ø–∞—á–∫–∞ —Å–∏–≥–∞—Ä–µ—Ç"
    ]

    found_message = random.choice(messages)
    await message.answer(found_message)

    update_stash(found_message)


async def find_stash_task():
    global mephedrone_total
    global other_items

    while True:
        messages = [
            "–û—Ç–ª–∏—á–Ω–æ! —Ç—ã –Ω–∞—à–µ–ª –ø–æ–¥ –∫—É—Å—Ç–æ–º 5–≥ –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞",
            "–ê–•–£–ï–¢–¨, –≤ —Ç—ë–º–Ω–æ–º –ø–µ—Ä–µ—É–ª–∫–µ –ª–µ–∂–∞–ª–∏ 3 —Ä–∞–∑–Ω—ã–µ –∑–∞–∫–ª–∞–¥–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É—Å–ø–µ–ª–∏ —Å–ø—Ä—è—Ç–∞—Ç—å\n+6–≥ –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞\n+2–≥ –∫–æ–∫–∞–∏–Ω–∞\n+–ø–∞–∫–µ—Ç–∏–∫ —Å–Ω—é—Å–∞",
            "–£–¥–∞—á–∞ —É–ª—ã–±–Ω—É–ª–∞—Å—å —Ç–µ–±–µ! –í –∑–∞–±—Ä–æ—à–µ–Ω–Ω–æ–º –∑–¥–∞–Ω–∏–∏ —Ç—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª —Ç–∞–π–Ω–∏–∫ —Å 8–≥ –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞",
            "–û–≥–æ! –í –º—É—Å–æ—Ä–Ω–æ–º –±–∞–∫–µ –ª–µ–∂–∞–ª–∏ 3–≥ –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞, –∑–∞–≤–µ—Ä–Ω—É—Ç—ã–µ –≤ —Ñ–æ–ª—å–≥—É",
            "–ù–∞—à–µ–ª –∑–∞–∫–ª–∞–¥–∫—É! –í –Ω–µ–π 4–≥ –º–µ—Ñ–µ–¥—Ä–æ–Ω–∞ –∏ –ø–∞—á–∫–∞ —Å–∏–≥–∞—Ä–µ—Ç"
        ]

        found_message = random.choice(messages)
        await message.answer(found_message) 

        update_stash(found_message)

        await asyncio.sleep(1800)


def update_stash(found_message):
    global mephedrone_total
    global other_items

    if "–º–µ—Ñ–µ–¥—Ä–æ–Ω–∞" in found_message:
        mephedrone_amount = int(found_message.split(" ")[1].replace("–≥", ""))
        mephedrone_total += mephedrone_amount

    if "–∫–æ–∫–∞–∏–Ω–∞" in found_message:
        cocaine_amount = int(found_message.split(" ")[1].replace("–≥", ""))
        other_items.append(f"{cocaine_amount}–≥ –∫–æ–∫–∞–∏–Ω–∞")

    if "—Å–Ω—é—Å–∞" in found_message:
        other_items.append("–ø–∞–∫–µ—Ç–∏–∫ —Å–Ω—é—Å–∞")

    if "—Å–∏–≥–∞—Ä–µ—Ç" in found_message:
        other_items.append("–ø–∞—á–∫–∞ —Å–∏–≥–∞—Ä–µ—Ç")


async def main():
    asyncio.create_task(find_stash_task())
    await dp.start_polling()


if __name__ == '__main__':
    executor.start(dp, main)
