import asyncio
import random
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

API_TOKEN = '7632478806:AAElMiV06yQtnPHKgjbF_UPM0JuQiKcOlSE'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

discovered_planets = 0
space_artifacts = []
planet_names = []

@dp.message_handler(commands=['start'])
async def start_message(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ª—é–±–∏—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –∫–æ—Å–º–æ—Å. üöÄ")

@dp.message_handler(commands=['–∫–æ—Å–º–æ—Å'])
async def show_discoveries(message: types.Message):
    response = "–í–∞—à–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è:\n"
    for i in range(min(len(planet_names), 10)):
        response += f"–ü–ª–∞–Ω–µ—Ç–∞ {planet_names[i]}\n"
    for i in range(min(len(space_artifacts), 10)):
        response += f"{space_artifacts[i]}\n"
    if len(planet_names) > 10 or len(space_artifacts) > 10:
        response += "–∏ –µ—â–µ {} –ø—Ä–µ–¥–º–µ—Ç–æ–≤/–ø–ª–∞–Ω–µ—Ç\n".format(len(planet_names) + len(space_artifacts) - 20)
    response += f"–í—Å–µ–≥–æ –ø–ª–∞–Ω–µ—Ç: {discovered_planets}"
    await message.answer(response)

@dp.message_handler(regexp=r"^–ò—Å–∫–∞—Ç—å –ø–ª–∞–Ω–µ—Ç—É$")
async def find_planet(message: types.Message):
    global discovered_planets
    global space_artifacts
    global planet_names
    messages = [
        "–û—Ç–ª–∏—á–Ω–æ! –í—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –Ω–æ–≤—É—é –ø–ª–∞–Ω–µ—Ç—É –≤ –≥–∞–ª–∞–∫—Ç–∏–∫–µ –ê–Ω–¥—Ä–æ–º–µ–¥—ã! üéâ\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}",
        "–ê–•–£–ï–¢–¨! –í–æ –≤—Ä–µ–º—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ—Å–º–æ—Å–∞ –≤—ã –Ω–∞—Ç–∫–Ω—É–ª–∏—Å—å –Ω–∞ —Ç—Ä–∏ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–∞!\n+1 –Ω–æ–≤–∞—è –ø–ª–∞–Ω–µ—Ç–∞\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}\n+–∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å –¥—Ä–µ–≤–Ω–µ–π —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–∏\n+–æ—Å–∫–æ–ª–æ–∫ –∞—Å—Ç–µ—Ä–æ–∏–¥–∞ —Å —Ä–µ–¥–∫–∏–º–∏ –º–∏–Ω–µ—Ä–∞–ª–∞–º–∏",
        "–£–¥–∞—á–∞ —É–ª—ã–±–Ω—É–ª–∞—Å—å –≤–∞–º! –í—ã –Ω–∞—à–ª–∏ –ø–ª–∞–Ω–µ—Ç—É, –ø–æ—Ö–æ–∂—É—é –Ω–∞ –ó–µ–º–ª—é, –≤ —Å–æ–∑–≤–µ–∑–¥–∏–∏ –û—Ä–∏–æ–Ω–∞! üåé\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}",
        "–û–≥–æ! –í—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –ø–ª–∞–Ω–µ—Ç—É, –≤—Ä–∞—â–∞—é—â—É—é—Å—è –≤–æ–∫—Ä—É–≥ –¥–≤–æ–π–Ω–æ–π –∑–≤–µ–∑–¥—ã! ü™ê\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}",
        "–í–∞—à–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø—Ä–∏–Ω–µ—Å–ª–∏ –ø–ª–æ–¥—ã! –í—ã –Ω–∞—à–ª–∏ –Ω–æ–≤—É—é –ø–ª–∞–Ω–µ—Ç—É —Å –∫–æ–ª—å—Ü–∞–º–∏, –∫–∞–∫ —É –°–∞—Ç—É—Ä–Ω–∞! ü™ê\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}"
    ]
    found_message = random.choice(messages).format(planet_name=generate_planet_name())
    await message.answer(found_message)
    update_discoveries(found_message)

async def find_planet_task():
    global discovered_planets
    global space_artifacts
    global planet_names
    while True:
        messages = [
            "–û—Ç–ª–∏—á–Ω–æ! –í—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –Ω–æ–≤—É—é –ø–ª–∞–Ω–µ—Ç—É –≤ –≥–∞–ª–∞–∫—Ç–∏–∫–µ –ê–Ω–¥—Ä–æ–º–µ–¥—ã! üéâ\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}",
            "–ê–•–£–ï–¢–¨! –í–æ –≤—Ä–µ–º—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ—Å–º–æ—Å–∞ –≤—ã –Ω–∞—Ç–∫–Ω—É–ª–∏—Å—å –Ω–∞ —Ç—Ä–∏ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–∞!\n+1 –Ω–æ–≤–∞—è –ø–ª–∞–Ω–µ—Ç–∞\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}\n+–∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å –¥—Ä–µ–≤–Ω–µ–π —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–∏\n+–æ—Å–∫–æ–ª–æ–∫ –∞—Å—Ç–µ—Ä–æ–∏–¥–∞ —Å —Ä–µ–¥–∫–∏–º–∏ –º–∏–Ω–µ—Ä–∞–ª–∞–º–∏",
            "–£–¥–∞—á–∞ —É–ª—ã–±–Ω—É–ª–∞—Å—å –≤–∞–º! –í—ã –Ω–∞—à–ª–∏ –ø–ª–∞–Ω–µ—Ç—É, –ø–æ—Ö–æ–∂—É—é –Ω–∞ –ó–µ–º–ª—é, –≤ —Å–æ–∑–≤–µ–∑–¥–∏–∏ –û—Ä–∏–æ–Ω–∞! üåé\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}",
            "–û–≥–æ! –í—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –ø–ª–∞–Ω–µ—Ç—É, –≤—Ä–∞—â–∞—é—â—É—é—Å—è –≤–æ–∫—Ä—É–≥ –¥–≤–æ–π–Ω–æ–π –∑–≤–µ–∑–¥—ã! ü™ê\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}",
            "–í–∞—à–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø—Ä–∏–Ω–µ—Å–ª–∏ –ø–ª–æ–¥—ã! –í—ã –Ω–∞—à–ª–∏ –Ω–æ–≤—É—é –ø–ª–∞–Ω–µ—Ç—É —Å –∫–æ–ª—å—Ü–∞–º–∏, –∫–∞–∫ —É –°–∞—Ç—É—Ä–Ω–∞! ü™ê\n–ü–ª–∞–Ω–µ—Ç–∞: {planet_name}"
        ]
        found_message = random.choice(messages).format(planet_name=generate_planet_name())
        await message.answer(found_message)
        update_discoveries(found_message)
        await asyncio.sleep(1800)

def update_discoveries(found_message):
    global discovered_planets
    global space_artifacts
    global planet_names
    if "–Ω–æ–≤—É—é –ø–ª–∞–Ω–µ—Ç—É" in found_message:
        discovered_planets += 1
        planet_names.append(generate_planet_name())
    if "–∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å" in found_message:
        space_artifacts.append("–∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –∫–æ—Ä–∞–±–ª—å –¥—Ä–µ–≤–Ω–µ–π —Ü–∏–≤–∏–ª–∏–∑–∞—Ü–∏–∏")
    if "–æ—Å–∫–æ–ª–æ–∫ –∞—Å—Ç–µ—Ä–æ–∏–¥–∞" in found_message:
        space_artifacts.append("–æ—Å–∫–æ–ª–æ–∫ –∞—Å—Ç–µ—Ä–æ–∏–¥–∞ —Å —Ä–µ–¥–∫–∏–º–∏ –º–∏–Ω–µ—Ä–∞–ª–∞–º–∏")

def generate_planet_name():
    prefixes = ["–ê–ª—å—Ç–∞", "–ë–µ—Ç–∞", "–ì–∞–º–º–∞", "–î–µ–ª—å—Ç–∞", "–≠–ø—Å–∏–ª–æ–Ω", "–ó–∏", "–≠—Ç–∞", "–¢–µ—Ç–∞", "–ô–æ—Ç–∞", "–ö–∞–ø–ø–∞"]
    suffixes = ["-42", "-77", "-13", "-99", "-20"]
    return random.choice(prefixes) + random.choice(suffixes)

async def main():
    asyncio.create_task(find_planet_task())
    await dp.start_polling()

if __name__ == '__main__':
    executor.start(dp, main)
